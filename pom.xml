<project xmlns="http://maven.apach
e.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>example.test.jooq</groupId>
    <artifactId>example</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <name>Jooq Test</name>
    
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <!-- Dependencies versions -->
        <example.slf4j.version>1.7.25</example.slf4j.version>
        <example.logback.version>1.2.3</example.logback.version>
        
        <example.postgresql.version>42.2.6</example.postgresql.version>
        <example.jooq.version>3.11.11</example.jooq.version>
        <example.jakarta-annotation.api.version>1.3.4</example.jakarta-annotation.api.version>
        
        <example.docker-maven-plugin.version>0.30.0</example.docker-maven-plugin.version>
        
        <!-- Test dependencies versions -->
        <example.junit.version>4.12</example.junit.version>
        
        <example.maven-compiler-plugin.version>3.8.1</example.maven-compiler-plugin.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${example.postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${example.jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${example.jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${example.jooq.version}</version>
        </dependency>
            
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${example.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${example.slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${example.slf4j.version}</version>
        </dependency>
            
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${example.logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${example.logback.version}</version>
        </dependency>
        
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${example.jakarta-annotation.api.version}</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${example.junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${example.maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${example.docker-maven-plugin.version}</version>
                    <configuration>
                        <logStdout>true</logStdout>
                        <logDate>default</logDate>
                        <autoPull>true</autoPull>
                        <removeVolumes>true</removeVolumes>
                        <verbose>true</verbose>
                        <images>
                            <image>
                                <name>postgres:10.5</name>
                                <run>
                                    <exposedPropertyKey>database-postgresql</exposedPropertyKey>
                                    <log>
                                        <enabled>true</enabled>
                                        <driver>
                                            <name>
                                                <!-- Make sure default docker logging mode is used -->
                                                json-file
                                            </name>
                                        </driver>
                                    </log>
                                    <net>bridge</net>
                                    <wait>
                                        <tcp>
                                            <ports>
                                                <port>5432</port>
                                            </ports>
                                        </tcp>
                                        <time>40000</time>
                                        <kill>5000</kill>
                                        <shutdown>5000</shutdown>
                                    </wait>
                                    <volumes>
                                        <bind>
                                            <volume>${project.basedir}/init.sql:/docker-entrypoint-initdb.d/init.sql</volume>
                                        </bind>
                                    </volumes>
                                </run>
                            </image>
                        </images>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- BEGIN integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>docker.container.database-postgresql.ip</name>
                            <value>${docker.container.database-postgresql.ip}</value>
                        </property>
                    </systemProperties>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-dockers-before-integration-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-dockers-after-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- END integration tests -->
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>generate-jooq-sources</id>
            <activation>
                <file>
                    <missing>${basedir}/target/generated-sources/jooq</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${example.docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>start-postgre-docker-before-sources-generated</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-postgre-docker-after-sources-generated</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <plugin>
                        <!-- Specify the maven code generator plugin -->
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${example.jooq.version}</version>
                        
                        <!-- The plugin should hooks into the generate goal -->
                        <executions>
                            <execution>
                                <id>generate-database-jooq-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                
                                <!-- Specify the plugin configuration.
                                The configuration format is the same as for the standalone code generator -->
                                <configuration>

                                    <!-- JDBC connection parameters -->
                                    <jdbc>
                                        <driver>org.postgresql.Driver</driver>
                                        <url>jdbc:postgresql://${docker.container.database-postgresql.ip}:5432/postgres</url>
                                        <user>postgres</user>
                                        <password></password>
                                    </jdbc>

                                    <!-- Generator parameters -->
                                    <generator>
                                        <database>
                                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                            <includes>.*</includes>
                                            <excludes></excludes>
                                            
                                            <schemata>
                                                <schema>
                                                    <inputSchema>jooq_test_catalog</inputSchema>
                                                </schema>
                                            </schemata>
                                        </database>
                                        <generate>
                                            <interfaces>false</interfaces>
                                            <pojos>false</pojos>
                                            <daos>false</daos>
                                            <fluentSetters>true</fluentSetters>
                                            <javaTimeTypes>true</javaTimeTypes>
                                            <deprecated>false</deprecated>
                                        </generate>
                                        <target>
                                            <packageName>example.test.jooq.database</packageName>
                                            <directory>target/generated-sources/jooq</directory>
                                        </target>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                            
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${example.postgresql.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
